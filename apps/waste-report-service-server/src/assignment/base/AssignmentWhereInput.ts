/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AuthorityWhereUniqueInput } from "../../authority/base/AuthorityWhereUniqueInput";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { CollectorWhereUniqueInput } from "../../collector/base/CollectorWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { ReportWhereUniqueInput } from "../../report/base/ReportWhereUniqueInput";
import { EnumAssignmentStatus } from "./EnumAssignmentStatus";
import { StringNullableFilter } from "../../util/StringNullableFilter";

@InputType()
class AssignmentWhereInput {
  @ApiProperty({
    required: false,
    type: () => AuthorityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AuthorityWhereUniqueInput)
  @IsOptional()
  @Field(() => AuthorityWhereUniqueInput, {
    nullable: true,
  })
  authority?: AuthorityWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CollectorWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CollectorWhereUniqueInput)
  @IsOptional()
  @Field(() => CollectorWhereUniqueInput, {
    nullable: true,
  })
  collector?: CollectorWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => ReportWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ReportWhereUniqueInput)
  @IsOptional()
  @Field(() => ReportWhereUniqueInput, {
    nullable: true,
  })
  report?: ReportWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumAssignmentStatus,
  })
  @IsEnum(EnumAssignmentStatus)
  @IsOptional()
  @Field(() => EnumAssignmentStatus, {
    nullable: true,
  })
  status?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  updateImageUrl?: StringNullableFilter;
}

export { AssignmentWhereInput as AssignmentWhereInput };
